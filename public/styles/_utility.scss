.m5 { margin: 5px; }
.m10 { margin: 10px; }
.m15 { margin: 15px; }
.m20 { margin: 20px; }
.m25 { margin: 25px; }
.m30 { margin: 30px; }
.m35 { margin: 35px; }
.mxauto { margin-left: auto; margin-right: auto; }

.p0 { padding: 0px; }
.p5 { padding: 5px; }
.p10 { padding: 10px; }
.p15 { padding: 15px; }
.p20 { padding: 20px; }
.p25 { padding: 25px; }
.p30 { padding: 30px; }
.p35 { padding: 35px; }

.font { font-family: var(--font); }

.pointerEventsAll { pointer-events: all; }
.pointerEventsAuto { pointer-events: auto; }
.pointerEventsNone { pointer-events: none; }

.flex { display: flex; }
.column { flex-direction: column; }
.alignCenter { align-items: center; }
.row { flex-direction: row; }
.alignStart { align-items: flex-start; }
.alignEnd { align-items: flex-end; }

.spaceBetween { 
    justify-content: space-between !important; 
}

.justifyStart { 
    justify-items: flex-start; 
    justify-content: flex-start; 
}

.justifyCenter { 
    justify-items: center; 
    justify-content: center; 
}

.justifyEnd { 
    justify-items: flex-end; 
    justify-content: flex-end; 
}

.textAlignLeft {
    text-align: left;
}

.textAlignCenter {
    text-align: center;
}

.textAlignRight {
    text-align: right;
}

.center { 
    @extend .mxauto; 
    @extend .alignCenter; 
    @extend .justifyCenter; 
}

.grid { display: grid; }
.gridRow { 
    grid-template-columns: 
        repeat(auto-fit, minmax(0, 1fr)); 
}

.gap0 { gap: 0px; grid-gap: 0px; }
.gap5 { gap: 5px; grid-gap: 5px; }
.gap10 { gap: 10px; grid-gap: 10px; }
.gap15 { gap: 15px; grid-gap: 15px; }
.gap20 { gap: 20px; grid-gap: 20px; }
.gap25 { gap: 25px; grid-gap: 25px; }
.gap30 { gap: 30px; grid-gap: 30px; }
.gap35 { gap: 35px; grid-gap: 35px; }
.gap15I { gap: 15px !important; grid-gap: 15px !important; }

.w75 { width: 75%; min-width: 75%; max-width: 75%; }
.w80 { width: 80%; min-width: 80%; max-width: 80%; }
.w85 { width: 85%; min-width: 85%; max-width: 85%; }
.w90 { width: 90%; min-width: 90%; max-width: 90%; }
.w95 { width: 95%; min-width: 95%; max-width: 95%; }
.w100, .fullW { width: 100%; min-width: 100%; max-width: 100%; }
.minwunset { min-width: unset; }
.minwunsetI { min-width: unset !important; }

.w95i { 
    width: 95% !important; 
    min-width: 95% !important; 
    max-width: 95% !important; 
}

.h100 { height: 100%; min-height: 100%; max-height: 100%; }

.hidden { display: none; }
.fit { max-width: fit-content; }
.blurred { filter: blur(15px); }
.cursorPointer { cursor: pointer; }
.cursorAuto { cursor: auto !important; }
.transition { transition: var(--transition); }

.containerX {
    @extend .flex; 
    @extend .w100; 
    @extend .gap15; 
    @extend .center; 
    @extend .column; 
}

.container {
    @extend .containerX; 
    @extend .h100;  
}

.gridContainer {
    @extend .grid;
    @extend .w100;
    @extend .h100;
    @extend .gap15;
    @extend .gridRow;
    @extend .alignCenter;
}

.lineClamp1 {
    --lines: 1;
    overflow: hidden;
    display: -webkit-box;
    text-overflow: ellipsis;
    line-clamp: var(--lines);
    -webkit-box-orient: vertical;
    -webkit-line-clamp: var(--lines);
}

.lineClamp2 { @extend .lineClamp1; --lines: 2; transition: var(--transition); }
.lineClamp3 { @extend .lineClamp1; --lines: 3; transition: var(--transition); }
.lineClamp4 { @extend .lineClamp1; --lines: 4; transition: var(--transition); }
.lineClamp5 { @extend .lineClamp1; --lines: 5; transition: var(--transition); }
.lineClamp6 { @extend .lineClamp1; --lines: 6; transition: var(--transition); }
.lineClamp7 { @extend .lineClamp1; --lines: 7; transition: var(--transition); }
.lineClamp8 { @extend .lineClamp1; --lines: 8; transition: var(--transition); }
.lineClamp9 { @extend .lineClamp1; --lines: 9; transition: var(--transition); }
.lineClamp10 { @extend .lineClamp1; --lines: 10; transition: var(--transition); }

.hoverLink {
    display: flex;
    grid-gap: 0.3em;
    position: relative;
    align-items: center;
    transition: var(--transition);

    &::before {
        right: 0;
        z-index: 0;
        width: 100%;
        height: 1px;
        bottom: -5px;
        display: block;
        position: absolute;
        transform: scale(0, 1);
        content: "" !important;
        background: var(--main);
        transform-origin: 0% 100%;
        transition: var(--transition);
    }

    &:not(.pointerEventsNone) {
        &:hover {
            transition: var(--transition);
            &::before {
                transform: scale(1, 1);
                transition: 500ms ease-in-out;
            }
        }
    }
}

.headerEnd {
    nav {
        .navigationLink {
            @extend .hoverLink;
            &.activeRoute {
                &::before {
                    transform: scale(1, 1);
                }
            }
        }
    }
}